services:
  api:
    build:
      context: ./backend
    command: sh -c "composer install --no-interaction --prefer-dist && php -S 0.0.0.0:8080 -t public public/index.php"
    environment:
      APP_ENV: local
      APP_DEBUG: 'true'
      APP_URL: http://localhost:8080
      FRONTEND_APP_URL: http://localhost:5173
      DB_HOST: db
      DB_PORT: '3306'
      DB_DATABASE: river
      DB_USERNAME: river
      DB_PASSWORD: river_pass
      GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID:-}"
      GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENT_SECRET:-}"
      GOOGLE_REDIRECT_URI: http://localhost:8080/auth/google/callback
      GOOGLE_SCOPES: openid email profile
      GOOGLE_PROMPT: consent
      GOOGLE_ACCESS_TYPE: offline
      CORS_ALLOWED_ORIGINS: http://localhost:5173
      SESSION_NAME: river_session
      SESSION_LIFETIME: '1209600'
      SESSION_DOMAIN: ''
      SESSION_SECURE: 'false'
      SESSION_SAME_SITE: Lax
    volumes:
      - ./backend:/var/www/html
      - api_vendor:/var/www/html/vendor
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - river

  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8080
      VITE_GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID:-}"
    depends_on:
      api:
        condition: service_started
    networks:
      - river

  db:
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: river
      MYSQL_USER: river
      MYSQL_PASSWORD: river_pass
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD --silent || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 120s
    networks:
      - river


volumes:
  api_vendor:
  frontend_node_modules:
  db_data:

networks:
  river:
    driver: bridge
